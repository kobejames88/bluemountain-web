<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.so206.mapper.PutForwardMapper">
  <resultMap id="BaseResultMap" type="com.so206.po.PutForward">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="opt_user" jdbcType="INTEGER" property="optUser" />
    <result column="opt_time" jdbcType="TIMESTAMP" property="optTime" />
    <result column="psd" jdbcType="VARCHAR" property="psd" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="put_id" jdbcType="VARCHAR" property="putId" />
    <result column="put_name" jdbcType="VARCHAR" property="putName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="error_info" jdbcType="VARCHAR" property="errorInfo" />
    <result column="trano" jdbcType="VARCHAR" property="trano" />
    <result column="p_type" jdbcType="INTEGER" property="pType" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="str" jdbcType="VARCHAR" property="str" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, opt_user, opt_time, psd, title, put_id, put_name, price, status, error_info, 
    trano, p_type, ip, str
  </sql>
  <select id="selectByExample" parameterType="com.so206.po.PutForwardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from put_forward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from put_forward
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from put_forward
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.so206.po.PutForwardExample">
    delete from put_forward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.so206.po.PutForward">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select LAST_INSERT_ID()
    </selectKey>
    insert into put_forward (id, opt_user, opt_time, 
      psd, title, put_id, 
      put_name, price, status, 
      error_info, trano, p_type, 
      ip, str)
    values (#{id,jdbcType=INTEGER}, #{optUser,jdbcType=INTEGER}, #{optTime,jdbcType=TIMESTAMP}, 
      #{psd,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{putId,jdbcType=VARCHAR}, 
      #{putName,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{errorInfo,jdbcType=VARCHAR}, #{trano,jdbcType=VARCHAR}, #{pType,jdbcType=INTEGER}, 
      #{ip,jdbcType=VARCHAR}, #{str,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.so206.po.PutForward">
    insert into put_forward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="optUser != null">
        opt_user,
      </if>
      <if test="optTime != null">
        opt_time,
      </if>
      <if test="psd != null">
        psd,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="putId != null">
        put_id,
      </if>
      <if test="putName != null">
        put_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="errorInfo != null">
        error_info,
      </if>
      <if test="trano != null">
        trano,
      </if>
      <if test="pType != null">
        p_type,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="str != null">
        str,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="optUser != null">
        #{optUser,jdbcType=INTEGER},
      </if>
      <if test="optTime != null">
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="psd != null">
        #{psd,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="putId != null">
        #{putId,jdbcType=VARCHAR},
      </if>
      <if test="putName != null">
        #{putName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="errorInfo != null">
        #{errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="trano != null">
        #{trano,jdbcType=VARCHAR},
      </if>
      <if test="pType != null">
        #{pType,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="str != null">
        #{str,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.so206.po.PutForwardExample" resultType="java.lang.Long">
    select count(*) from put_forward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update put_forward
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.optUser != null">
        opt_user = #{record.optUser,jdbcType=INTEGER},
      </if>
      <if test="record.optTime != null">
        opt_time = #{record.optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.psd != null">
        psd = #{record.psd,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.putId != null">
        put_id = #{record.putId,jdbcType=VARCHAR},
      </if>
      <if test="record.putName != null">
        put_name = #{record.putName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.errorInfo != null">
        error_info = #{record.errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.trano != null">
        trano = #{record.trano,jdbcType=VARCHAR},
      </if>
      <if test="record.pType != null">
        p_type = #{record.pType,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.str != null">
        str = #{record.str,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update put_forward
    set id = #{record.id,jdbcType=INTEGER},
      opt_user = #{record.optUser,jdbcType=INTEGER},
      opt_time = #{record.optTime,jdbcType=TIMESTAMP},
      psd = #{record.psd,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      put_id = #{record.putId,jdbcType=VARCHAR},
      put_name = #{record.putName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      error_info = #{record.errorInfo,jdbcType=VARCHAR},
      trano = #{record.trano,jdbcType=VARCHAR},
      p_type = #{record.pType,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      str = #{record.str,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.so206.po.PutForward">
    update put_forward
    <set>
      <if test="optUser != null">
        opt_user = #{optUser,jdbcType=INTEGER},
      </if>
      <if test="optTime != null">
        opt_time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="psd != null">
        psd = #{psd,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="putId != null">
        put_id = #{putId,jdbcType=VARCHAR},
      </if>
      <if test="putName != null">
        put_name = #{putName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="errorInfo != null">
        error_info = #{errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="trano != null">
        trano = #{trano,jdbcType=VARCHAR},
      </if>
      <if test="pType != null">
        p_type = #{pType,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="str != null">
        str = #{str,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.so206.po.PutForward">
    update put_forward
    set opt_user = #{optUser,jdbcType=INTEGER},
      opt_time = #{optTime,jdbcType=TIMESTAMP},
      psd = #{psd,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      put_id = #{putId,jdbcType=VARCHAR},
      put_name = #{putName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      error_info = #{errorInfo,jdbcType=VARCHAR},
      trano = #{trano,jdbcType=VARCHAR},
      p_type = #{pType,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      str = #{str,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>